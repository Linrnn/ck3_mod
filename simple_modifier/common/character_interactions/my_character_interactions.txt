移除_负面_特质 = {
	category = my_character_interactions
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		scope:actor = {
			is_ai = no
		}
	}

	on_accept = {
		scope:recipient = {
			remove_trait = wounded_1		# 受伤
			remove_trait = wounded_2		# 身受重伤
			remove_trait = wounded_3		# 严重撕裂
			remove_trait = sickly			# 多病
			remove_trait = impotent			# 性无能
			remove_trait = infirm			# 体弱多病
			remove_trait = incapable		# 无能
			remove_trait = inbred			# 近亲繁殖
			remove_trait = maimed			# 残废
			remove_trait = blind			# 失明

			remove_trait = ill				# 患病
			remove_trait = bubonic_plague	# 腺鼠疫
			remove_trait = cancer			# 癌症
			remove_trait = consumption		# 肺痨
			remove_trait = great_pox		# 梅毒
			remove_trait = gout_ridden		# 痛风
			remove_trait = leper			# 麻风病
			remove_trait = lovers_pox		# 情人的疱疹
			remove_trait = pneumonic		# 肺炎
			remove_trait = smallpox			# 天花
			remove_trait = typhus			# 伤寒
		}
	}

	auto_accept = yes
	ai_will_do = 0
}

结束_进攻_战争 = {
	interface = interfere_in_war
	special_interaction = interfere_in_war_interaction
	ai_accept_negotiation = yes
	popup_on_receive = yes
	pause_on_receive = yes
	send_name = "SEND_DEMAND"
	ai_maybe = yes
	prompt = STOP_VASSAL_WAR_ATTACKER
	on_decline_summary = stop_attacker_vassal_war_decline_summary
	auto_accept = yes
	ai_will_do = 0

	is_shown = {
		NOT = {
			scope:recipient = scope:actor
		}
		scope:recipient = {
			exists = liege
			target_is_liege_or_above = scope:actor
			highest_held_title_tier > tier_barony
			any_character_war = {
				primary_attacker = scope:recipient
				save_temporary_scope_as = target_war
			}
		}
		scope:actor = {
			is_ai = no
			NOT = {
				is_participant_in_war = scope:target_war
			}
		}
	}
	is_valid_showing_failures_only = {
		NOT = {
			scope:recipient = {
				has_strong_hook = scope:actor
			}
		}
	}
	can_be_picked = {
		scope:target.primary_attacker = scope:recipient
	}
	on_accept = {
		scope:recipient = {
			trigger_event = {
				id = my_events.5
			}
		}
	}
}

结束_防御_战争 = {
	interface = interfere_in_war
	special_interaction = interfere_in_war_interaction
	ai_accept_negotiation = yes
	popup_on_receive = yes
	pause_on_receive = yes
	send_name = "SEND_DEMAND"
	ai_maybe = yes
	prompt = STOP_VASSAL_WAR_DEFENDER
	on_decline_summary = stop_attacker_vassal_war_decline_summary
	auto_accept = yes
	ai_will_do = 0

	is_shown = {
		NOT = {
			scope:recipient = scope:actor
		}
		scope:recipient = {
			exists = liege
			target_is_liege_or_above = scope:actor
			highest_held_title_tier > tier_barony
			any_character_war = {
				primary_defender = scope:recipient
				save_temporary_scope_as = target_war
			}
		}
		scope:actor = {
			is_ai = no
			NOT = {
				is_participant_in_war = scope:target_war
			}
		}
	}
	is_valid_showing_failures_only = {
		NOT = {
			scope:recipient = {
				has_strong_hook = scope:actor
			}
		}
	}
	can_be_picked = {
		scope:target.primary_defender = scope:recipient
	}
	on_accept = {
		scope:recipient = {
			trigger_event = {
				id = my_events.5
			}
		}
	}
}

修改_王国_法理 = {
	category = my_character_interactions
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		scope:recipient = {
			highest_held_title_tier = tier_kingdom
		}
		scope:actor = {
			is_ai = no
		}
	}

	on_accept = {
		scope:recipient = {
			every_held_title = {
				limit = {
					#tier < scope:recipient.highest_held_title_tier
					tier = tier_duchy
					not = {
						de_jure_liege = scope:recipient.primary_title
					}
				}
				set_de_jure_liege_title = scope:recipient.primary_title
			}
			every_vassal = {
				every_held_title = {
					limit = {
						#tier < scope:recipient.highest_held_title_tier
						tier = tier_duchy
						not = {
							de_jure_liege = scope:recipient.primary_title
						}
					}
					set_de_jure_liege_title = scope:recipient.primary_title
				}
			}
		}
	}

	auto_accept = yes
	ai_will_do = 0
}

# 立刻怀孕 = {
# 	category = my_character_interactions
# 	use_diplomatic_range = no
# 	ignores_pending_interaction_block = yes

# 	is_shown = {
# 		scope:actor = {
# 			is_ai = no
# 		}
# 	}
# 	on_accept = {
# 		scope:recipient = {
# 			add_trait = pregnant			# 怀孕
# 		}
# 	}
# 	auto_accept = yes
# 	ai_will_do = 0
# }